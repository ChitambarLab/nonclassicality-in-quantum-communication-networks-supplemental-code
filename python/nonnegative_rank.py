import numpy as np

from sklearn.decomposition import NMF

# 6 planar symmetric states and povm
X = np.array([
    [1/3, 1/4, 1/12, 0, 1/12, 1/4],
    [1/4,1/3, 1/4, 1/12, 0, 1/12],
    [1/12,1/4,1/3, 1/4, 1/12, 0],
    [0, 1/12,1/4,1/3, 1/4, 1/12],
    [1/12,0, 1/12,1/4,1/3, 1/4],
    [1/4,1/12,0,1/12,1/4,1/3]
])
np.array([
    [1/3,1/4,1/12,0,1/12,1/4],
 0.25        0.333333     0.25         0.0833333   6.93889e-18  0.0833333
 0.0833333   0.25         0.333333     0.25        0.0833333    1.38778e-17
 1.2498e-33  0.0833333    0.25         0.333333    0.25         0.0833333
 0.0833333   2.77556e-17  0.0833333    0.25        0.333333     0.25
 0.25        0.0833333    2.77556e-17  0.0833333   0.25         0.333333
])

model6 = NMF(6, max_iter=10000, tol=1e-7)
model5 = NMF(5, max_iter=10000, tol=1e-7)
model4 = NMF(4, max_iter=10000, tol=1e-7)

W4 = model4.fit_transform(X)
W5 = model5.fit_transform(X)
W6 = model6.fit_transform(X)

H4 = model4.components_
H5 = model5.components_
H6 = model6.components_

X4 = W4@H4
X5 = W5@H5
X6 = W6@H6

np.sum((X - X4)**2)

np.sum((X - X5)**2)
np.sum((X - X6)**2)


exW5 = np.array([
    [0, 3.95494253e-07, 6.74026248e-01, 0, 4.13517142e-01],
    [1.26883045e-01, 0, 3.37013718e-01, 0, 2.09729098e-07],
    [1.26883226e-01, 0, 2.05389787e-07, 3.86956894e-01, 0],
    [2.31608074e-07, 0, 0, 7.73914553e-01, 4.13516624e-01],
    [0, 4.45374954e-01, 0, 3.86958025e-01, 1.88194961e-07],
    [0, 4.45375587e-01, 3.37012722e-01, 2.19771086e-07, 0,]
])
exH5 = np.array([
    [0.65677089, 1.97031537, 1.97031796, 0.65677324, 0, 0],
    [0.18710838, 0, 0, 0.18710773, 0.56132393, 0.56132467],
    [0.4945405 , 0.24727079, 0, 0, 0, 0.24726974],
    [0, 0, 0.21535488, 0.4307106 , 0.21535577, 0],
    [0, 0.20152245, 0.20152333, 0, 0.20152278, 0.20152359]
])

exW52 = np.array([
    [0, 0, 0.674026248, 0, 0.413517142],
    [0.126883045, 0, 0.337013718, 0, 0],
    [0.126883226, 0, 0, 0.386956894, 0],
    [0, 0, 0, 0.773914553, 0.413516624],
    [0, 0.445374954, 0, 0.386958025, 0],
    [0, 0.445375587, 0.337012722, 0, 0,]
])
exH52 = np.array([
    [0.65677089, 1.97031537, 1.97031796, 0.65677324, 0, 0],
    [0.18710838, 0, 0, 0.18710773, 0.56132393, 0.56132467],
    [0.4945405 , 0.24727079, 0, 0, 0, 0.24726974],
    [0, 0, 0.21535488, 0.4307106 , 0.21535577, 0],
    [0, 0.20152245, 0.20152333, 0, 0.20152278, 0.20152359]
])


exW52@exH52

np.sum((X - exW52@exH52)**2)
